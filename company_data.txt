1) Company Fundamental Data for Equity

assets: Assets - Total
sales: Sales/Turnover (Net)
debt: Debt
eps: Earnings Per Share (Basic) - Including Extraordinary Items
equity: Common/Ordinary Equity - Total
operating_income: Operating Income After Depreciation - Quarterly
cogs: Cost of Goods Sold
revenue: Revenue - Total
ppent: Property Plant and Equipment - Total (Net)
capex: Capital Expenditures
income: Net Income
operating_expense: Operating Expense- Total
invested_capital: Invested Capital - Total - Quarterly
debt_lt: Long-Term Debt - Total
inventory_turnover: Inventory Turnover
assets_curr: Current Assets - Total
inventory: Inventories - Total
liabilities: Liabilities - Total
income_tax: Income Taxes - Total
cash: Cash

2) Price Volume Data for Equity

adv20: Average daily volume in past 20 days
cap: Daily market capitalization (in millions)
close: Daily close price
country: Country grouping
dividend: Dividend
exchange: Exchange grouping
high: Daily high price
industry: Industry grouping
low: Daily low price
market: Market grouping
open: Daily open price
returns: Daily returns
sector: Sector grouping
sharesout: Daily outstanding shares (in millions)
split: Stock split ratio
subindustry: Subindustry grouping
volume: Daily volume
vwap: Daily volume weighted average price

3) Model Data

mdf_oey: Operating earnings yield OEY real
mdf_nps: Net profit margin on sales
mdf_rds: R&D as a percent of sales
mdf_gry: Ford projected growth rate + dividend yield
mdf_pbk: Price/book value
mdf_emo: Earnings momentum percentile 100 the best
mdf_smo: Sales momentum percentile
mdf_pec: Current price/earnings ratio
mdf_com: Composite price/value and earnings trend parameter, equal to PVA SED/500.
mdf_vol: 3 month average daily trading share volume in 100's
mdf_yld: Current dividend yield %
mdf_vmo: Value momentum percentile 100 the best
mdf_das: Total debt/asset ratio where total debt includes all liabilities, not including preferred or common equity .
mdf_ass: Total assets, in $ millions.
mdf_sdr: Relative earnings trend SDR real
mdf_sed: Earnings trend SED integer
mdf_cap: Market capitalization total market value of common stock outstanding , in $ millions.
mdf_ato: Asset Turnover, total revenue/total assets.
mdf_roi: Internal rate of return
mdf_per: Normal price/earnings ratio

4) Data & Operators
days_from_last_change(x): Amount of days since last change of x
ts_weighted_delay(x, k=0.5): Instead of replacing today’s value with yesterday’s as in ts_delay(x, 1), it assigns weighted average of today’s and yesterday’s values with weight on today’s value being k and yesterday’s being (1-k). Detailed description
hump(x, hump = 0.01): Limits amount and magnitude of changes in input (thus reducing turnover). Detailed description
hump_decay(x, p=0): This operator helps to ignore the values that changed too little corresponding to previous ones. Detailed description
inst_tvr(x, d): Total trading value / Total holding value in the past d days
jump_decay(x, d, sensitivity=0.5, force=0.1): If there is a huge jump in current data compare to previous one Detailed description
kth_element(x, d, k): Returns K-th value of input by looking through lookback days. This operator can be used to backfill missing data if k=1 Detailed description
last_diff_value(x, d): Returns last x value not equal to current x value from last d days
ts_arg_max(x, d): Returns the relative index of the min value in the time series for the past d days. If the current day has the min value for the past d days, it returns 0. If previous day has the min value for the past d days, it returns 1. Detailed description
ts_arg_min(x, d): Returns the relative index of the min value in the time series for the past d days; If the current day has the min value for the past d days, it returns 0; If previous day has the min value for the past d days, it returns 1.
ts_av_diff(x, d): Returns x - tsmean(x, d), but deals with NaNs carefully. That is NaNs are ignored during mean computation. Detailed description
ts_backfill(x,lookback = d, k=1, ignore="NAN"): Backfill is the process of replacing the NAN or 0 values by a meaningful value (i.e., a first non-NaN value)
ts_co_kurtosis(y, x, d): Returns cokurtosis of y and x for the past d days. Detailed description
ts_corr(x, y, d): Returns correlation of x and y for the past d days
ts_co_skewness(y, x, d): Returns coskewness of y and x for the past d days. Detailed description
ts_count_nans(x ,d): Returns the number of NaN values in x for the past d days
ts_covariance(y, x, d): Returns covariance of y and x for the past d days
ts_decay_exp_window(x, d, factor = f): Returns exponential decay of x with smoothing factor for the past d days. Detailed description
ts_decay_linear(x, d, dense = false): Returns the linear decay on x for the past d days. Dense parameter=false means operator works in sparse mode and we treat NaN as 0. In dense mode we do not.
ts_delay(x, d): Returns x value d days ago
ts_delta(x, d): Returns x - ts_delay(x, d)
ts_ir(x, d): Return information ratio ts_mean(x, d) / ts_std_dev(x, d)
ts_kurtosis(x, d): Returns kurtosis of x for the last d days. Detailed description
ts_max(x, d): Returns max value of x for the past d days
ts_max_diff(x, d): Returns x - ts_max(x, d)
ts_mean(x, d): Returns average value of x for the past d days.
ts_median(x, d): Returns median value of x for the past d days
ts_min(x, d): Returns min value of x for the past d days
ts_min_diff(x, d): Returns x - ts_min(x, d)
ts_min_max_cps(x, d, f = 2): Returns (ts_min(x, d) + ts_max(x, d)) - f * x. If not specified, by default f = 2
ts_min_max_diff(x, d, f = 0.5): Returns x - f * (ts_min(x, d) + ts_max(x, d)). If not specified, by default f = 0.5
ts_moment(x, d, k=0): Returns K-th central moment of x for the past d days. Detailed description
ts_partial_corr(x, y, z, d): Returns partial correlation of x, y, z for the past d days. Detailed description
ts_percentage(x, d, percentage=0.5): Returns percentile value of x for the past d days. Detailed description
ts_poly_regression(y, x, d, k = 1): Returns y - Ey, where Ey = x + x^2 + … + x^k over d days; k must be specified as a keyword argument
ts_product(x, d): Returns product of x for the past d days
ts_rank(x, d, constant = 0): Rank the values of x for each instrument over the past d days, then return the rank of the current value + constant. If not specified, by default, constant = 0.
ts_regression(y, x, d, lag = 0, rettype = 0): Returns various parameters related to regression function. Detailed description
ts_returns (x, d, mode = 1): Returns the relative change in the x value .
ts_scale(x, d, constant = 0): Returns (x – ts_min(x, d)) / (ts_max(x, d) – ts_min(x, d)) + constant
ts_skewness(x, d): Return skewness of x for the past d days. Detailed description
ts_std_dev(x, d): Returns standard deviation of x for the past d days
ts_step(1), step(1): Returns days' counter
ts_sum(x, d): Sum values of x for the past d days.
ts_theilsen(x, y, d): Theil Sen slope estimator of inputs for the past n days. More details on wiki
ts_triple_corr(x, y, z, d): Returns triple correlation of x, y, z for the past d days. Detailed description
ts_zscore(x, d): Z-score is a numerical measurement that describes a value's relationship to the mean of a group of values. Z-score is measured in terms of standard deviations from the mean: (x - tsmean(x,d)) / tsstddev(x,d)
ts_entropy(x,d): For each instrument, we collect values of input in the past d days and calculate the probability distribution then the information entropy via a histogram as a result. Detailed description
ts_vector_neut(x,y,d): Returns x- ts_vector_proj(x,y,d)
ts_vector_proj(x,y,d): Returns vector projection of x onto y in time-series space. Algebraic and geometric details can be found on wiki
ts_rank_gmean_amean_diff(input1, input2, input3,...,d): Returns Geometric Mean of ts_rank(input,d) of all input - Arithmetic Mean of ts_rank(input,d) of all input. This is similar to rank_gmean_amean_diff operator but in time-series space. Detailed description
ts_quantile(x,d, driver="gaussian" ): It calculates ts_rank and apply to its value an inverse cumulative density function from driver distribution. Possible values of driver (optional ) are "gaussian", "uniform", "cauchy" distribution where "gaussian" is the default.


# Raw Data

assets
sales
debt
eps
equity
operating_income
cogs
revenue
ppent
capex
income
operating_expense
invested_capital
debt_lt
inventory_turnover
assets_curr
inventory
liabilities
income_tax
cash
cashflow_op
cashflow_dividends
bookvalue_ps
ebitda
ebit
return_equity
sales_ps
debt_st
goodwill
return_assets
receivable
sales_growth
cashflow
enterprise_value
liabilities_curr
pretax_income
depre_amort
interest_expense
employee
current_ratio
income_beforeextra
sga_expense
retained_earnings
cashflow_fin
working_capital
cashflow_invst
rd_expense
cash_st
